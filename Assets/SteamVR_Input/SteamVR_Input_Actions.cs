// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    public partial class SteamVR_Input
    {
        public static SteamVR_Action_Boolean __actions_default_in_InteractUI;

        public static SteamVR_Action_Boolean __actions_default_in_Teleport;

        public static SteamVR_Action_Boolean __actions_default_in_GrabPinch;

        public static SteamVR_Action_Boolean __actions_default_in_GrabGrip;

        public static SteamVR_Action_Pose __actions_default_in_Pose;

        public static SteamVR_Action_Skeleton __actions_default_in_SkeletonLeftHand;

        public static SteamVR_Action_Skeleton __actions_default_in_SkeletonRightHand;

        public static SteamVR_Action_Single __actions_default_in_Squeeze;

        public static SteamVR_Action_Vibration __actions_default_out_Haptic;

        public static SteamVR_Action_Vector2 __actions_platformer_in_Move;

        public static SteamVR_Action_Boolean __actions_platformer_in_Jump;

        public static SteamVR_Action_Vector2 __actions_buggy_in_Steering;

        public static SteamVR_Action_Single __actions_buggy_in_Throttle;

        public static SteamVR_Action_Boolean __actions_buggy_in_Brake;

        public static SteamVR_Action_Boolean __actions_buggy_in_Reset;

        public static void Dynamic_InitializeActions()
        {
            __actions_default_in_InteractUI.Initialize();
            __actions_default_in_Teleport.Initialize();
            __actions_default_in_GrabPinch.Initialize();
            __actions_default_in_GrabGrip.Initialize();
            __actions_default_in_Pose.Initialize();
            __actions_default_in_SkeletonLeftHand.Initialize();
            __actions_default_in_SkeletonRightHand.Initialize();
            __actions_default_in_Squeeze.Initialize();
            __actions_default_out_Haptic.Initialize();
            __actions_platformer_in_Move.Initialize();
            __actions_platformer_in_Jump.Initialize();
            __actions_buggy_in_Steering.Initialize();
            __actions_buggy_in_Throttle.Initialize();
            __actions_buggy_in_Brake.Initialize();
            __actions_buggy_in_Reset.Initialize();
        }

        public static void Dynamic_InitializeInstanceActions()
        {
            __actions_default_in_InteractUI =
                (SteamVR_Action_Boolean) SteamVR_Input_References.GetAction("__actions_default_in_InteractUI");
            __actions_default_in_Teleport =
                (SteamVR_Action_Boolean) SteamVR_Input_References.GetAction("__actions_default_in_Teleport");
            __actions_default_in_GrabPinch =
                (SteamVR_Action_Boolean) SteamVR_Input_References.GetAction("__actions_default_in_GrabPinch");
            __actions_default_in_GrabGrip =
                (SteamVR_Action_Boolean) SteamVR_Input_References.GetAction("__actions_default_in_GrabGrip");
            __actions_default_in_Pose =
                (SteamVR_Action_Pose) SteamVR_Input_References.GetAction("__actions_default_in_Pose");
            __actions_default_in_SkeletonLeftHand =
                (SteamVR_Action_Skeleton) SteamVR_Input_References.GetAction("__actions_default_in_SkeletonLeftHand");
            __actions_default_in_SkeletonRightHand =
                (SteamVR_Action_Skeleton) SteamVR_Input_References.GetAction("__actions_default_in_SkeletonRightHand");
            __actions_default_in_Squeeze =
                (SteamVR_Action_Single) SteamVR_Input_References.GetAction("__actions_default_in_Squeeze");
            __actions_default_out_Haptic =
                (SteamVR_Action_Vibration) SteamVR_Input_References.GetAction("__actions_default_out_Haptic");
            __actions_platformer_in_Move =
                (SteamVR_Action_Vector2) SteamVR_Input_References.GetAction("__actions_platformer_in_Move");
            __actions_platformer_in_Jump =
                (SteamVR_Action_Boolean) SteamVR_Input_References.GetAction("__actions_platformer_in_Jump");
            __actions_buggy_in_Steering =
                (SteamVR_Action_Vector2) SteamVR_Input_References.GetAction("__actions_buggy_in_Steering");
            __actions_buggy_in_Throttle =
                (SteamVR_Action_Single) SteamVR_Input_References.GetAction("__actions_buggy_in_Throttle");
            __actions_buggy_in_Brake =
                (SteamVR_Action_Boolean) SteamVR_Input_References.GetAction("__actions_buggy_in_Brake");
            __actions_buggy_in_Reset =
                (SteamVR_Action_Boolean) SteamVR_Input_References.GetAction("__actions_buggy_in_Reset");
            actions = new SteamVR_Action[]
            {
                __actions_default_in_InteractUI,
                __actions_default_in_Teleport,
                __actions_default_in_GrabPinch,
                __actions_default_in_GrabGrip,
                __actions_default_in_Pose,
                __actions_default_in_SkeletonLeftHand,
                __actions_default_in_SkeletonRightHand,
                __actions_default_in_Squeeze,
                __actions_default_out_Haptic,
                __actions_platformer_in_Move,
                __actions_platformer_in_Jump,
                __actions_buggy_in_Steering,
                __actions_buggy_in_Throttle,
                __actions_buggy_in_Brake,
                __actions_buggy_in_Reset
            };
            actionsIn = new SteamVR_Action_In[]
            {
                __actions_default_in_InteractUI,
                __actions_default_in_Teleport,
                __actions_default_in_GrabPinch,
                __actions_default_in_GrabGrip,
                __actions_default_in_Pose,
                __actions_default_in_SkeletonLeftHand,
                __actions_default_in_SkeletonRightHand,
                __actions_default_in_Squeeze,
                __actions_platformer_in_Move,
                __actions_platformer_in_Jump,
                __actions_buggy_in_Steering,
                __actions_buggy_in_Throttle,
                __actions_buggy_in_Brake,
                __actions_buggy_in_Reset
            };
            actionsOut = new SteamVR_Action_Out[]
            {
                __actions_default_out_Haptic
            };
            actionsVibration = new[]
            {
                __actions_default_out_Haptic
            };
            actionsPose = new[]
            {
                __actions_default_in_Pose
            };
            actionsBoolean = new[]
            {
                __actions_default_in_InteractUI,
                __actions_default_in_Teleport,
                __actions_default_in_GrabPinch,
                __actions_default_in_GrabGrip,
                __actions_platformer_in_Jump,
                __actions_buggy_in_Brake,
                __actions_buggy_in_Reset
            };
            actionsSingle = new[]
            {
                __actions_default_in_Squeeze,
                __actions_buggy_in_Throttle
            };
            actionsVector2 = new[]
            {
                __actions_platformer_in_Move,
                __actions_buggy_in_Steering
            };
            actionsVector3 = new SteamVR_Action_Vector3[0];
            actionsSkeleton = new[]
            {
                __actions_default_in_SkeletonLeftHand,
                __actions_default_in_SkeletonRightHand
            };
            actionsNonPoseNonSkeletonIn = new SteamVR_Action_In[]
            {
                __actions_default_in_InteractUI,
                __actions_default_in_Teleport,
                __actions_default_in_GrabPinch,
                __actions_default_in_GrabGrip,
                __actions_default_in_Squeeze,
                __actions_platformer_in_Move,
                __actions_platformer_in_Jump,
                __actions_buggy_in_Steering,
                __actions_buggy_in_Throttle,
                __actions_buggy_in_Brake,
                __actions_buggy_in_Reset
            };
        }
    }
}